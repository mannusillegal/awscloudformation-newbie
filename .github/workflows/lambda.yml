name: "deploy"

# concurrency:
#   group: prod_deploy
#   cancel-in-progress: false

on:
  # repository_dispatch:
  # pull_request:
  push:
    branches:
      #[testing]
      - cloudformation_lambda
    paths:
      - ".github/workflows/lambda.yml"
      - "app/**"
      - "Templates/basic_lambda_dockerImage.yml"

jobs:
  deploy-stack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: mlproject

        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_RUN_NUMBER} app/

          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_RUN_NUMBER} 
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_RUN_NUMBER"
          aws cloudformation package --template-file ./Templates/basic_lambda_dockerImage.yml --s3-bucket mylamfortest  --s3-prefix cloudformation/packages --output-template-file  newtemplate.yml

      - name: Update CloudFormation Stack
        id: update-stack
        uses: badsyntax/github-action-aws-cloudformation@master
        if:
        with:
          stack-name: "suraj-cloudformation-stack"
          template: "./Templates/basic_lambda_dockerImage.yml"
          # Only apply the changeset on pushes to main/cloudformation_lambda
          apply-change-set: ${{ github.event_name != 'pull_request' && github.event_name != 'repository_dispatch' }}
          aws-region: "us-east-1"

          parameters: "LambdaName=mylamfortest&EcrImageUri=${{ steps.build-image.outputs.image }}"

        # - uses: badsyntax/github-action-issue-comment@master
        #   name: Comment on Pull Request
        #   if: github.event_name == 'pull_request'
        #   with:
        #     action: "create-clean"
        #     template: ".github/pr-comment-template.hbs"
        #     id: cloudformation
        #     token: ${{ secrets.GITHUB_TOKEN }}
        #     issue-number: ${{ github.event.pull_request.number }}
        #     template-inputs: |
        #       {
        #         "changes": ${{ steps.update-stack.outputs.changes }},
        #         "outputs": ${{ steps.update-stack.outputs.outputs }},
        #         "applyChangeSet": ${{ github.event_name != 'pull_request' && github.event_name != 'repository_dispatch' }}
        #       }
        env:
          # Use outputs from the CloudFormation Stack
          S3BucketName: ${{ steps.update-stack.outputs.LambdaName }}

        # - name: packaging the lambda to s3
        # run: |
        #   aws cloudformation package --template-file ./Templates/basic_lambda_dockerImage.yml  --s3-bucket mylamfortest  --s3-prefix cloudformation/packages --output-template-file  cloudformation/packages template.yml
# aws cloudformation package --template-file /path_to_template/template.json --s3-bucket bucket-name --output-template-file packaged-template.json
